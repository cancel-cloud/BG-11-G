Nr.1
Ein Interpreter übersetzt den Programmcode, welcher verwendet wird, nur dann, wenn der code am ablaufen ist.
Der Code wird Zeile für Zeile erst übersetzt, wenn er gebraucht wird.
Ein Compiler wird z.B.: bei der Programmiersprache Java verwendet, dort muss der Programmcode einmal komplett
übersetzt werden zu Bytecode und es kommt eine verwendbare datei (*.jar) herraus,
welche nun verwendet werden kann.

Nr.2
### Verbesserte Erklärung:

Java-Code wird zunächst durch den Compiler in Java-Bytecode übersetzt. Dieser Bytecode ist eine Zwischenform,
die nicht direkt von der Hardware ausgeführt werden kann. Hier kommt die Java Virtual Machine (JVM) ins Spiel, die
für Java charakteristisch ist. Die JVM ist eine virtuelle Maschine, die diesen Bytecode ausführt. Sie fungiert als eine Art
Zwischenschicht zwischen dem Bytecode und der Hardware. Dadurch ermöglicht sie die Plattformunabhängigkeit von Java, da der
gleiche Bytecode auf verschiedenen Hardware-Plattformen ausgeführt werden kann, solange eine JVM vorhanden ist. Diese Fähigkeit
unterscheidet Java von vielen anderen Programmiersprachen, die direkt in maschinenspezifischen Code übersetzt werden.